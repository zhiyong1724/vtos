#ifndef __OS_SEM_H__
#define __OS_SEM_H__
#include "sched/os_timer.h"
#include "base/os_list.h"
typedef struct os_sem
{
	os_size_t sem;
	list_node_type_def *wait_task_list;
	timer_info_t timer;
} os_sem;
/*********************************************************************************************************************
* 创建一个新的信号量
* p_sem：指向一个存放os_sem结构的空间
* cnt：该信号量初始的信号个数
* return：返回新的信号量
*********************************************************************************************************************/
os_sem *os_sem_create(os_sem *p_sem, os_size_t cnt);
/*********************************************************************************************************************
* 获取一个信号，阻塞线程
* p_sem：指向要获取信号的信号量
* timeout：获取超时时间，单位ms，超时后直接返回，如果是0则表示不设置超时，线程被阻塞直到获取到信号
* p_status：指向一个空间，函数返回后，会把获取状态存放到这个空间上
*********************************************************************************************************************/
void os_sem_pend(os_sem *p_sem, os_size_t timeout, os_size_t *p_status);
/*********************************************************************************************************************
* 释放出一个信号
* p_sem：指向要释放信号的信号量
*********************************************************************************************************************/
os_size_t os_sem_post(os_sem *p_sem);
#endif
