#ifndef __OS_FS_H__
#define __OS_FS_H__
#include "fs/os_fs_def.h"
#include "fs/os_dentry.h"
#define SUPER_CLUSTER_ID 1
#define ROOT_CLUSTER_ID 2
typedef struct dir_ctl
{
	uint32 id;
	fnode *parent;
	fnode *cur; 
	uint32 index; 
} dir_ctl;

typedef struct file_ctl
{
	uint32 id;
	fnode *parent;
	fnode *cur;
	uint32 index;
} file_ctl;

typedef struct mf_info
{
	uint32 count;
	file_info finfo;
} mf_info;
/*********************************************************************************************************************
* 格式化文件系统
*********************************************************************************************************************/
void fs_formatting();
/*********************************************************************************************************************
* 加载文件系统
*********************************************************************************************************************/
void fs_loading();
/*********************************************************************************************************************
* 卸载文件系统
*********************************************************************************************************************/
void fs_unloading();
/*********************************************************************************************************************
* 创建文件夹
* path：文件路径
* return：0：创建成功；1：创建失败
*********************************************************************************************************************/
uint32 create_dir(const char *path);
/*********************************************************************************************************************
* 打开一个目录
* path：文件路径
* return：目录
*********************************************************************************************************************/
dir_ctl *open_dir(const char *path);
/*********************************************************************************************************************
* 关闭一个目录
* dir：目录
*********************************************************************************************************************/
void close_dir(dir_ctl *dir);
/*********************************************************************************************************************
* 读取一个目录
* finfo：存放找到的info
* dir：目录
*********************************************************************************************************************/
uint32 read_dir(file_info *finfo, dir_ctl *dir);
void test();
#endif