#ifndef __OS_FILE_H__
#define __OS_FILE_H__
#include "fs/os_cluster.h"
/*********************************************************************************************************************
* 写小文件，内容大小在一簇以内
* id：要写入的簇id
* index：写入位置
* data：写入数据
* size：数据大小
* return：成功写入大小
*********************************************************************************************************************/
uint32 little_file_data_write(uint32 id, uint32 index, void *data, uint32 size);
/*********************************************************************************************************************
* 读取小文件，内容大小在一簇以内
* id：要读取的簇id
* index：读取位置
* data：读取数据
* size：数据大小
* return：成功读取大小
*********************************************************************************************************************/
uint32 little_file_data_read(uint32 id, uint32 index, void *data, uint32 size);
/*********************************************************************************************************************
* 创建文件数据
* return：0：创建失败；其他：簇id
*********************************************************************************************************************/
uint32 create_file_data();
/*********************************************************************************************************************
* 获得数据簇id
* first：目录项
* i：存储当前目录项中数据位置的地址
* is_create：如果没有该数据簇，是否新建一个数据簇
* return：0：没有获取到数据簇；其他：数据簇id
*********************************************************************************************************************/
uint32 get_data_id(uint32 *first, uint32 *i, uint32 is_create);
/*********************************************************************************************************************
* 写入文件，内容大小大于一簇
* id：要写入的首簇id
* index：写入位置
* data：写入数据
* size：数据大小
* return：成功写入大小
*********************************************************************************************************************/
uint32 file_data_write(uint32 id, uint64 index, uint8 *data, uint32 size);
/*********************************************************************************************************************
* 读取文件，内容大小大于一簇
* id：要读取的首簇id
* index：读取位置
* data：读取数据
* size：数据大小
* return：成功读取大小
*********************************************************************************************************************/
uint32 file_data_read(uint32 id, uint64 index, uint8 *data, uint32 size);
/*********************************************************************************************************************
* 移除文件数据
* id：目录项
*********************************************************************************************************************/
void file_data_remove(uint32 id);
#endif